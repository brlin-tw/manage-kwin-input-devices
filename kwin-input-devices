#!/usr/bin/env bash
# Manage disable/enable state of input devices under Kwin(works under KDE Wayland)
#
# Copyright 2024 Amine Hassane <https://gist.github.com/Sporif>
# Copyright 2025 林博仁(Buo-ren Lin) <buo.ren.lin@gmail.com>
# SPDX-License-Identifier: LicenseRef-Amine-Hassane-Gist-PseudoLicense
QDBUS="${QDBUS:-qdbus6}"

declare -A DEVICES_TO_BE_MANAGED=(
    ["asus_numpad"]=''
    ["ASUE140D:00 04F3:31B9 Touchpad"]=''
    ["AT Translated Set 2 keyboard"]=''
)

if ! set -eE; then
    printf 'Error: Unable to configure error handling.\n' 1>&2
    exit 2
fi

script_basecommand="${0}"
if test "${#}" != 1; then
    printf 'Usage: %s _operation_mode_\n' "${script_basecommand}" 1>&2
    exit 1
fi

# Check existence of the DEVICES_TO_BE_MANAGED input devices in the running system, and, save their corresponding sysfs device name for future usage
find_devices() {
    local sysnames_raw
    if ! sysnames_raw="$(
        "${QDBUS}" \
            org.kde.KWin \
            /org/kde/KWin/InputDevice \
            org.freedesktop.DBus.Properties.Get \
            org.kde.KWin.InputDeviceManager \
            devicesSysNames
        )"; then
        printf 'Error: Unable to query the sysfs names of the kwin input devices.\n' 1>&2
        return 1
    fi

    if ! mapfile -t sysnames <<<"${sysnames_raw}"; then
        printf 'Error: Unable to load the sysnames array.\n' 1>&2
        return 1
    fi

    for sysname in "${sysnames[@]}"; do
        if ! name="$(
            "${QDBUS}" \
                org.kde.KWin \
                "/org/kde/KWin/InputDevice/${sysname}" \
                org.freedesktop.DBus.Properties.Get \
                org.kde.KWin.InputDevice \
                name
            )"; then
            printf \
                'Error: Unable to query the display name of the "%s" input device.\n' \
                "${sysname}" \
                1>&2
            return 1
        fi

        for device in "${!DEVICES_TO_BE_MANAGED[@]}"; do
            if [ "$name" == "$device" ]; then
                DEVICES_TO_BE_MANAGED["$device"]="$sysname"
            fi
        done
    done
}

get_device_status() {
    "${QDBUS}" org.kde.KWin "/org/kde/KWin/InputDevice/$1" org.freedesktop.DBus.Properties.Get org.kde.KWin.InputDevice "enabled"
}

set_device_status() {
    "${QDBUS}" org.kde.KWin "/org/kde/KWin/InputDevice/$1" org.freedesktop.DBus.Properties.Set org.kde.KWin.InputDevice "enabled" "$2"
}

toggle_device() {
    status=$(get_device_status "$1")
    status=$([[ "$status" == "false" ]] && echo true || echo false)
    set_device_status "$1" "$status"
}

if ! find_devices; then
    printf 'Error: Unable to find the input devices to manage.\n' 1>&2
    exit 2
fi

for device in "${!DEVICES_TO_BE_MANAGED[@]}"; do
    sysname=${DEVICES_TO_BE_MANAGED["$device"]}
    if test -z "${sysname}"; then
        continue
    fi
    case "$1" in
        "enable") set_device_status "$sysname" true ;;
        "disable") set_device_status "$sysname" false ;;
        "toggle") toggle_device "$sysname" ;;
        "status") echo "$device: $(get_device_status "$sysname" )" ;;
        *)
            printf 'Error: Unsupported operation mode "%s".\n' "$1" 1>&2
            exit 1
        ;;
    esac
done
