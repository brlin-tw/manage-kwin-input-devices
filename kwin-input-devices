#!/usr/bin/env bash
# Manage disable/enable state of input devices under Kwin(works under KDE Wayland)
#
# Copyright 2024 Amine Hassane <https://gist.github.com/Sporif>
# Copyright 2025 林博仁(Buo-ren Lin) <buo.ren.lin@gmail.com>
# SPDX-License-Identifier: LicenseRef-Amine-Hassane-Gist-PseudoLicense
QDBUS="${QDBUS:-qdbus6}"

declare -A DEVICES_TO_BE_MANAGED=(
    ["asus_numpad"]=''
    ["ASUE140D:00 04F3:31B9 Touchpad"]=''
    ["AT Translated Set 2 keyboard"]=''
)

if ! set -eE; then
    printf 'Error: Unable to configure error handling.\n' 1>&2
    exit 2
fi

script_basecommand="${0}"
if test "${#}" != 1; then
    printf 'Usage: %s _operation_mode_\n' "${script_basecommand}" 1>&2
    exit 1
fi

# Check existence of the DEVICES_TO_BE_MANAGED input devices in the running system, and, save their corresponding sysfs device name for future usage
find_devices() {
    for sysname in $("${QDBUS}" org.kde.KWin /org/kde/KWin/InputDevice org.freedesktop.DBus.Properties.Get org.kde.KWin.InputDeviceManager devicesSysNames); do
        name=$("${QDBUS}" org.kde.KWin "/org/kde/KWin/InputDevice/${sysname}" org.freedesktop.DBus.Properties.Get org.kde.KWin.InputDevice name)

        for device in "${!DEVICES_TO_BE_MANAGED[@]}"; do
            if [ "$name" == "$device" ]; then
                DEVICES_TO_BE_MANAGED["$device"]="$sysname"
            fi
        done
    done
}

check_devices() {
    local return_code=0
    for device in "${!DEVICES_TO_BE_MANAGED[@]}"; do
        sysname=${DEVICES_TO_BE_MANAGED["$device"]}
        if [ -z "$device" ]; then
            echo "Failed to find device ($device)"
            return_code=1
        fi
    done
    return "$return_code"
}

get_device_status() {
    "${QDBUS}" org.kde.KWin "/org/kde/KWin/InputDevice/$1" org.freedesktop.DBus.Properties.Get org.kde.KWin.InputDevice "enabled"
}

set_device_status() {
    "${QDBUS}" org.kde.KWin "/org/kde/KWin/InputDevice/$1" org.freedesktop.DBus.Properties.Set org.kde.KWin.InputDevice "enabled" "$2"
}

toggle_device() {
    status=$(get_device_status "$1")
    status=$([[ "$status" == "false" ]] && echo true || echo false)
    set_device_status "$1" "$status"
}

find_devices
if ! check_devices; then
    exit 1
fi

for device in "${!DEVICES_TO_BE_MANAGED[@]}"; do
    sysname=${DEVICES_TO_BE_MANAGED["$device"]}
    if test -z "${sysname}"; then
        continue
    fi
    case "$1" in
        "enable") set_device_status "$sysname" true ;;
        "disable") set_device_status "$sysname" false ;;
        "toggle") toggle_device "$sysname" ;;
        "status") echo "$device: $(get_device_status "$sysname" )" ;;
        *)
            printf 'Error: Unsupported operation mode "%s".\n' "$1" 1>&2
            exit 1
        ;;
    esac
done
