#!/usr/bin/env bash
# Manage disable/enable state of input devices under Kwin(works under KDE Wayland)
#
# Copyright 2024 Amine Hassane <https://gist.github.com/Sporif>
# SPDX-License-Identifier: LicenseRef-Amine-Hassane-Gist-PseudoLicense

declare -A devices=(
    ["asus_numpad"]=''
    ["ASUE140D:00 04F3:31B9 Touchpad"]=''
    ["AT Translated Set 2 keyboard"]=''
)

service="org.kde.KWin"
dbus_path="/org/kde/KWin/InputDevice"
interface="org.kde.KWin.InputDevice"
method_get="org.freedesktop.DBus.Properties.Get"
method_set="org.freedesktop.DBus.Properties.Set"

find_devices() {
    local dm_interface="org.kde.KWin.InputDeviceManager"
    local dm_property="devicesSysNames"

    for sysname in $(qdbus6 "$service" "$dbus_path" "$method_get" "$dm_interface" "$dm_property"); do
        name=$(qdbus6 "$service" "${dbus_path}/${sysname}" "$method_get" "$interface" name)

        for device in "${!devices[@]}"; do
            if [ "$name" == "$device" ]; then
                devices["$device"]="$sysname"
            fi
        done
    done
}

check_devices() {
    local return_code=0
    for device in "${!devices[@]}"; do
        sysname=${devices["$device"]}
        if [ -z "$device" ]; then
            echo "Failed to find device ($device)"
            return_code=1
        fi
    done
    return "$return_code"
}

get_device_status() {
    qdbus6 "$service" "${dbus_path}/$1" "$method_get" "$interface" "enabled"
}

set_device_status() {
    qdbus6 "$service" "${dbus_path}/$1" "$method_set" "$interface" "enabled" "$2"
}

toggle_device() {
    status=$(get_device_status "$1")
    status=$([[ "$status" == "false" ]] && echo true || echo false)
    set_device_status "$1" "$status"
}

find_devices
if ! check_devices; then
    exit 1
fi

for device in "${!devices[@]}"; do
    sysname=${devices["$device"]}
    case "$1" in
        "enable") set_device_status "$sysname" true ;;
        "disable") set_device_status "$sysname" false ;;
        "toggle") toggle_device "$sysname" ;;
        "status") echo "$device: $(get_device_status "$sysname" )"
    esac
done
